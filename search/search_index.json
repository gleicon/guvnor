{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Guvnor","text":"<p>Process manager and reverse proxy in one binary.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>cd your-project\nguvnor init\nguvnor start\n</code></pre> <p>Visit <code>http://your-project.localhost:8080</code></p>"},{"location":"#features","title":"Features","text":"<ul> <li>Auto-detects Node.js, Python, Go, Rust, PHP, Java</li> <li>Process management with health checks</li> <li>Virtual host routing</li> <li>Automatic HTTPS via Let's Encrypt</li> <li>Zero dependencies</li> </ul>"},{"location":"#installation","title":"Installation","text":"Download BinaryInstall with Go <pre><code>curl -sSL https://github.com/gleicon/guvnor/releases/latest/download/guvnor-$(uname -s)-$(uname -m) -o guvnor\nchmod +x guvnor\nsudo mv guvnor /usr/local/bin/\n</code></pre> <pre><code>go install github.com/gleicon/guvnor/cmd/guvnor@latest\n</code></pre>"},{"location":"#commands","title":"Commands","text":"<pre><code>guvnor init                 # Generate config\nguvnor start [app]          # Start apps\nguvnor stop [app]           # Stop apps\nguvnor status [app]         # Show status\nguvnor logs [app]           # View logs\n</code></pre>"},{"location":"#quick-examples","title":"Quick Examples","text":"New ProjectExisting ProjectProduction <pre><code>mkdir my-app &amp;&amp; cd my-app\necho 'console.log(\"Hello\")' &gt; server.js\nguvnor init &amp;&amp; guvnor start\n# Visit: http://my-app.localhost:8080\n</code></pre> <pre><code>cd my-existing-project\nguvnor init      # Auto-detects your app\nguvnor start     # Runs with smart defaults\n</code></pre> <pre><code>guvnor start --domain myapp.com --email admin@myapp.com\n# Automatic HTTPS with Let's Encrypt\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"guvnor.yaml<pre><code>apps:\n  - name: web\n    hostname: web.localhost\n    command: node\n    args: [\"server.js\"]\n\n  - name: api\n    hostname: api.localhost\n    command: uvicorn\n    args: [\"main:app\"]\n    tls:\n      enabled: true\n      auto_cert: true\n</code></pre>"},{"location":"#how-it-works","title":"How It Works","text":"<pre><code>graph LR\n    A[Request] --&gt; B[Guvnor Proxy]\n    B --&gt; C[Your App]\n\n    B --&gt; D[Process Manager]\n    D --&gt; E[Health Checks]\n    D --&gt; F[Auto Restart]\n</code></pre> <ol> <li>Detects your apps - Scans project files</li> <li>Generates config - Smart defaults</li> <li>Starts processes - With monitoring</li> <li>Routes requests - By hostname</li> <li>Handles HTTPS - Automatic certificates</li> </ol> <p>Config priority: <code>guvnor.yaml</code> &gt; <code>Procfile</code> &gt; auto-detect</p>"},{"location":"api-example/","title":"API Documentation Example","text":"<p>Example of structured API-style documentation.</p>"},{"location":"api-example/#commands","title":"Commands","text":""},{"location":"api-example/#guvnor-init","title":"guvnor init","text":"INIT <code>guvnor init [flags]</code>  Initialize Guvnor configuration in current directory.   Description Auto-detects applications and generates guvnor.yaml configuration file.  **Usage:** <pre><code>guvnor init\nguvnor init --force    # Overwrite existing config\n</code></pre>  **Detection Logic:** 1. Scans for `package.json`, `go.mod`, `Cargo.toml`, etc. 2. Identifies application type and optimal commands 3. Generates configuration with smart defaults"},{"location":"api-example/#guvnor-start","title":"guvnor start","text":"START <code>guvnor start [app-name] [flags]</code>  Start applications defined in configuration.   Examples <pre><code># Start all applications\nguvnor start\n\n# Start specific application\nguvnor start webapp\n\n# Start with production domain\nguvnor start --domain myapp.com --email admin@myapp.com\n</code></pre>   **Flags:**  | Flag | Type | Description | |------|------|-------------| | `--domain` | string | Production domain for TLS | | `--email` | string | Email for Let's Encrypt | | `--config` | string | Custom config file path | | `--port` | int | Override HTTP port |"},{"location":"api-example/#configuration-schema","title":"Configuration Schema","text":"YAML <code>guvnor.yaml</code>  Complete configuration file schema.   Server Configuration <pre><code>server:\n  http_port: 8080      # HTTP port\n  https_port: 8443     # HTTPS port  \n  log_level: info      # Log verbosity\n</code></pre> Application Definition <pre><code>apps:\n  - name: webapp           # Required: unique identifier\n    hostname: app.local    # Optional: routing hostname\n    port: 3000            # Optional: auto-assigned\n    command: node         # Required: executable\n    args: [\"server.js\"]   # Optional: arguments\n    working_dir: ./app    # Optional: working directory\n    environment:          # Optional: env variables\n      NODE_ENV: production\n    health_check:         # Optional: monitoring\n      enabled: true\n      path: /health\n      interval: 30s\n    restart_policy:       # Optional: restart behavior\n      enabled: true\n      max_retries: 5\n    tls:                  # Optional: HTTPS config\n      enabled: true\n      auto_cert: true\n      email: admin@app.com\n</code></pre>"},{"location":"api-example/#status-responses","title":"Status Responses","text":""},{"location":"api-example/#guvnor-status","title":"guvnor status","text":"STATUS <code>Application Status</code>  Shows current state of all managed applications.   Output Format Tabular display of application status <pre><code>$ guvnor status\n\nAPP         PID    STATUS    RESTARTS  PORT   UPTIME    COMMAND\nweb         1234   running   0         3000   2h 15m    node server.js\napi         1235   running   1         8000   1h 30m    uvicorn main:app  \nworker      1236   stopped   3         -      -         python worker.py\n</code></pre>  **Status Values:** - `running` - Application is healthy and responding - `starting` - Application is initializing   - `stopped` - Application is not running - `failed` - Application crashed and exceeded retry limit"},{"location":"architecture/","title":"Architecture","text":"<p>How Guvnor works internally and the flow of configuration files.</p>"},{"location":"architecture/#system-architecture","title":"System Architecture","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                        Guvnor Process                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                   \u2502\n\u2502  \u2502  HTTP Server    \u2502    \u2502  Management API  \u2502                   \u2502\n\u2502  \u2502  (8080/8443)    \u2502    \u2502  (REST/IPC)      \u2502                   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n\u2502           \u2502                       \u2502                            \u2502\n\u2502           \u25bc                       \u25bc                            \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                   \u2502\n\u2502  \u2502 Reverse Proxy   \u2502    \u2502 Process Manager  \u2502                   \u2502\n\u2502  \u2502 - Host routing  \u2502    \u2502 - Lifecycle mgmt \u2502                   \u2502\n\u2502  \u2502 - TLS termination\u2502   \u2502 - Health checks  \u2502                   \u2502\n\u2502  \u2502 - Load balancing\u2502    \u2502 - Restart policy \u2502                   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n\u2502           \u2502                       \u2502                            \u2502\n\u2502           \u2502              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                   \u2502\n\u2502           \u2502              \u25bc        \u25bc        \u25bc                   \u2502\n\u2502           \u2502      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502\n\u2502           \u2502      \u2502 App A   \u2502 \u2502 App B   \u2502 \u2502 App C   \u2502           \u2502\n\u2502           \u2502      \u2502 :3000   \u2502 \u2502 :8000   \u2502 \u2502 :9000   \u2502           \u2502\n\u2502           \u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502\n\u2502           \u2502              \u2502        \u2502        \u2502                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n\u2502  \u2502 TLS Manager     \u2502              \u2502                            \u2502\n\u2502  \u2502 - Let's Encrypt \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                   \u2502\n\u2502  \u2502 - Auto renewal  \u2502     \u2502 Log Aggregator  \u2502                   \u2502\n\u2502  \u2502 - Per-app certs \u2502     \u2502 - Circular buf  \u2502                   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502 - Cross-process \u2502                   \u2502\n\u2502           \u2502               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Certificate    \u2502\n    \u2502 Storage        \u2502\n    \u2502 ./certs/       \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                      External Traffic                          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 HTTP Request   \u2502\n    \u2502 Host: api.app  \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n            \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Guvnor Proxy                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  1. Parse Host header                                           \u2502\n\u2502  2. Match to app configuration                                  \u2502\n\u2502  3. Apply TLS if configured                                     \u2502\n\u2502  4. Forward to app port                                         \u2502\n\u2502  5. Return response                                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#configuration-flow","title":"Configuration Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Configuration Lifecycle                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n1. INITIALIZATION PHASE\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502   Project   \u2502    \u2502 guvnor init \u2502    \u2502 Auto-detect \u2502\n   \u2502 Directory   \u251c\u2500\u2500\u2500\u25ba\u2502   Command   \u251c\u2500\u2500\u2500\u25ba\u2502    Apps     \u2502\n   \u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                               \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n   \u2502   Procfile  \u2502    \u2502    .env     \u2502         \u2502\n   \u2502 (optional)  \u2502    \u2502 (optional)  \u2502         \u2502\n   \u2502             \u2502    \u2502             \u2502         \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n                                               \u2502\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n                      \u2502guvnor.yaml  \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502 Generated   \u2502\n                      \u2502             \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n2. RUNTIME PHASE\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502guvnor start \u2502\n   \u2502   Command   \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n         \u25bc\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502Load Config  \u2502    \u2502 Validate    \u2502    \u2502   Start     \u2502\n   \u2502guvnor.yaml  \u251c\u2500\u2500\u2500\u25ba\u2502   Apps      \u251c\u2500\u2500\u2500\u25ba\u2502 Processes   \u2502\n   \u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                               \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n   \u2502   .env      \u2502    \u2502Environment  \u2502         \u2502\n   \u2502Variables    \u251c\u2500\u2500\u2500\u25ba\u2502Substitution \u2502         \u2502\n   \u2502             \u2502    \u2502             \u2502         \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n                                               \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n   \u2502   Procfile  \u2502    \u2502Process Defs \u2502         \u2502\n   \u2502Parsing      \u251c\u2500\u2500\u2500\u25ba\u2502(if exists)  \u2502         \u2502\n   \u2502(fallback)   \u2502    \u2502             \u2502         \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n                                               \u2502\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n                      \u2502   Runtime   \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502 Supervision \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n3. MANAGEMENT PHASE\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 CLI Commands\u2502\n   \u2502 guvnor logs \u2502\n   \u2502 guvnor stop \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n         \u25bc\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502Management   \u2502    \u2502   Live      \u2502\n   \u2502    API      \u251c\u2500\u2500\u2500\u25ba\u2502 Process     \u2502\n   \u2502             \u2502    \u2502 Control     \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#file-priorities-and-lifecycle","title":"File Priorities and Lifecycle","text":"<pre><code>Configuration Priority (highest to lowest):\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 1. guvnor.yaml (explicit config)       \u2502 \u2190 Primary\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2. Procfile (process definitions)      \u2502 \u2190 Fallback  \n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3. Auto-detection (package.json, etc.) \u2502 \u2190 Last resort\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nEnvironment Variables:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 1. guvnor.yaml app.environment{}        \u2502 \u2190 Per-app override\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \n\u2502 2. .env file variables                  \u2502 \u2190 Global defaults\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3. System environment                   \u2502 \u2190 System-wide\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nFile Lifecycle:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    File    \u2502   Created   \u2502    Read      \u2502   Updated   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502guvnor.yaml \u2502 guvnor init \u2502 guvnor start \u2502 Manual edit \u2502\n\u2502            \u2502             \u2502 guvnor validate \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Procfile   \u2502 guvnor init \u2502 guvnor start \u2502 Manual edit \u2502\n\u2502            \u2502 (optional)  \u2502 (if no yaml) \u2502             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   .env     \u2502 guvnor init \u2502 guvnor start \u2502 Manual edit \u2502\n\u2502            \u2502 (optional)  \u2502 (always)     \u2502             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   logs     \u2502 guvnor start\u2502 guvnor logs  \u2502 Auto-rotate \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#process-management","title":"Process Management","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                     Process Supervision                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nApplication Lifecycle:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   STOPPED   \u2502\u2500\u2500\u2500\u25ba\u2502  STARTING   \u2502\u2500\u2500\u2500\u25ba\u2502   RUNNING   \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u25b2                \u2502                  \u2502\n        \u2502                \u25bc                  \u2502\n        \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u2502\n        \u2502          \u2502   FAILED    \u2502          \u2502\n        \u2502          \u2502             \u2502          \u2502\n        \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502\n        \u2502                \u2502                  \u2502\n        \u2502                \u25bc                  \u2502\n        \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 RESTARTING  \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                   \u2502             \u2502\n                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nHealth Check Flow:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502HTTP Request \u2502    \u2502   Success   \u2502    \u2502   Healthy   \u2502\n\u2502to /health   \u251c\u2500\u2500\u2500\u25ba\u2502 (200 OK)    \u251c\u2500\u2500\u2500\u25ba\u2502    State    \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                           \u2502\n                           \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Failure   \u2502    \u2502   Retry     \u2502    \u2502  Unhealthy  \u2502\n\u2502 (Non-200)   \u251c\u2500\u2500\u2500\u25ba\u2502 (N times)   \u251c\u2500\u2500\u2500\u25ba\u2502  -&gt; Restart \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#virtual-host-routing","title":"Virtual Host Routing","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Request Routing                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nIncoming Request:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 GET /api/users  \u2502\n\u2502 Host: api.app   \u2502\n\u2502 User-Agent: ... \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Parse Host      \u2502\n\u2502 header          \u2502\n\u2502 \"api.app\"       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Match against   \u2502    \u2502   app: api      \u2502    \u2502 Forward to      \u2502\n\u2502 app hostnames   \u251c\u2500\u2500\u2500\u25ba\u2502 hostname:api.app\u251c\u2500\u2500\u2500\u25ba\u2502 localhost:8000  \u2502\n\u2502                 \u2502    \u2502 port: 8000      \u2502    \u2502                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                      \u2502\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 App Response    \u2502    \u2502 Return to       \u2502\n\u2502 200 OK          \u251c\u2500\u2500\u2500\u25ba\u2502 Client          \u2502\n\u2502 {...users...}   \u2502    \u2502                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nMultiple Apps:\nweb.localhost:8080 \u2500\u2500\u25ba App A (port 3000) \u2500\u2500\u25ba Frontend\napi.localhost:8080 \u2500\u2500\u25ba App B (port 8000) \u2500\u2500\u25ba API\nadmin.localhost:8080 \u25ba App C (port 9000) \u2500\u2500\u25ba Admin\n</code></pre>"},{"location":"architecture/#tls-certificate-management","title":"TLS Certificate Management","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   TLS Certificate Flow                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nPer-App TLS Configuration:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   App A     \u2502    \u2502   App B     \u2502    \u2502   App C     \u2502\n\u2502 hostname:   \u2502    \u2502 hostname:   \u2502    \u2502 hostname:   \u2502\n\u2502 web.com     \u2502    \u2502 api.com     \u2502    \u2502 admin.com   \u2502\n\u2502 tls: true   \u2502    \u2502 tls: true   \u2502    \u2502 tls: false  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502                  \u2502                  \u2502\n      \u25bc                  \u25bc                  \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Let's Encrypt\u2502    \u2502Let's Encrypt\u2502    \u2502   HTTP      \u2502\n\u2502Certificate  \u2502    \u2502Certificate  \u2502    \u2502   Only      \u2502\n\u2502web.com      \u2502    \u2502api.com      \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nCertificate Lifecycle:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Request    \u2502    \u2502   Obtain    \u2502    \u2502   Store     \u2502\n\u2502Certificate  \u251c\u2500\u2500\u2500\u25ba\u2502from LE/ACME \u251c\u2500\u2500\u2500\u25ba\u2502 in cert_dir \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u25b2                                   \u2502\n        \u2502                                   \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Auto-renewal \u2502\u25c4\u2500\u2500\u2500\u2524   Monitor   \u2502\u25c4\u2500\u2500\u2500\u2524    Load     \u2502\n\u2502(30 days)    \u2502    \u2502  Expiry     \u2502    \u2502   &amp; Use     \u2502\n\u2502             \u2502    \u2502             \u2502    \u2502             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#key-components","title":"Key Components","text":""},{"location":"architecture/#1-discovery-engine","title":"1. Discovery Engine","text":"<ul> <li>Scans project directory for known application patterns</li> <li>Detects package.json, go.mod, Cargo.toml, requirements.txt</li> <li>Generates appropriate commands and configurations</li> </ul>"},{"location":"architecture/#2-process-manager","title":"2. Process Manager","text":"<ul> <li>Supervises application processes using Go's os/exec</li> <li>Implements restart policies with exponential backoff</li> <li>Monitors process health via HTTP/TCP checks</li> <li>Handles graceful shutdown (SIGTERM \u2192 SIGKILL)</li> </ul>"},{"location":"architecture/#3-reverse-proxy","title":"3. Reverse Proxy","text":"<ul> <li>HTTP server with virtual host routing</li> <li>Parses Host headers to route requests</li> <li>Handles TLS termination per-application</li> <li>Implements load balancing for multiple instances</li> </ul>"},{"location":"architecture/#4-certificate-manager","title":"4. Certificate Manager","text":"<ul> <li>Integrates with Let's Encrypt ACME protocol</li> <li>Manages per-application certificates</li> <li>Automatic renewal before expiry</li> <li>Stores certificates in configurable directory</li> </ul>"},{"location":"architecture/#5-configuration-system","title":"5. Configuration System","text":"<ul> <li>YAML-based primary configuration (guvnor.yaml)</li> <li>Procfile fallback for Heroku compatibility</li> <li>Environment variable substitution from .env files</li> <li>Smart defaults with override capability</li> </ul>"},{"location":"architecture/#6-logging-system","title":"6. Logging System","text":"<ul> <li>Circular buffer for cross-process log aggregation</li> <li>HTTP API for log retrieval by CLI commands</li> <li>Structured logging with configurable levels</li> <li>Process-specific log filtering and display</li> </ul> <p>This architecture provides a single-binary solution that replaces complex infrastructure while maintaining flexibility and production-readiness.</p>"},{"location":"configuration-enhanced/","title":"Configuration Reference","text":"<p>Complete reference for <code>guvnor.yaml</code> configuration file.</p>"},{"location":"configuration-enhanced/#server-configuration","title":"Server Configuration","text":"server - Global server settings  <pre><code>server:\n  http_port: 8080      # HTTP port (default: 8080)\n  https_port: 8443     # HTTPS port (default: 8443)  \n  log_level: info      # Log level: debug, info, warn, error\n</code></pre>   ### Parameters  | Parameter | Type | Default | Description | |-----------|------|---------|-------------| | `http_port` | integer | `8080` | Port for HTTP traffic | | `https_port` | integer | `8443` | Port for HTTPS traffic | | `log_level` | string | `info` | Logging verbosity |  ### Examples   Development Use non-privileged ports for local development <pre><code>server:\n  http_port: 8080\n  https_port: 8443\n  log_level: debug\n</code></pre> Production Use standard ports with reduced logging <pre><code>server:\n  http_port: 80\n  https_port: 443\n  log_level: warn\n</code></pre>"},{"location":"configuration-enhanced/#application-configuration","title":"Application Configuration","text":"apps - Application definitions  <pre><code>apps:\n  - name: web-app\n    hostname: web.localhost\n    port: 3000\n    command: node\n    args: [\"server.js\"]\n    working_dir: /path/to/app\n</code></pre>   ### Required Parameters  | Parameter | Type | Description | |-----------|------|-------------| | `name` | string | Unique app identifier | | `command` | string | Command to execute |  ### Optional Parameters  | Parameter | Type | Default | Description | |-----------|------|---------|-------------| | `hostname` | string | `{name}.localhost` | Hostname for routing | | `port` | integer | auto-assigned | Port number | | `args` | array | `[]` | Command arguments | | `working_dir` | string | current dir | Working directory |"},{"location":"configuration-enhanced/#environment-variables","title":"Environment Variables","text":"environment - Per-app environment  <pre><code>apps:\n  - name: api\n    environment:\n      NODE_ENV: production\n      DATABASE_URL: postgres://localhost/db\n      PORT: \"8000\"\n</code></pre>   ### Priority Order  1. **App-level environment** (highest priority) 2. **`.env` file variables** 3. **System environment** (lowest priority)  ### Variable Substitution  Environment variables are substituted in command arguments:  <pre><code>apps:\n  - name: api\n    args: [\"--port\", \"$PORT\"]\n    environment:\n      PORT: \"8000\"\n</code></pre>"},{"location":"configuration-enhanced/#health-checks","title":"Health Checks","text":"GET <code>/health</code>  Configure health monitoring for automatic restarts.   health_check - Health monitoring  <pre><code>apps:\n  - name: api\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n      timeout: 5s\n      retries: 3\n      expected_status: 200\n</code></pre>   | Parameter | Type | Default | Description | |-----------|------|---------|-------------| | `enabled` | boolean | `false` | Enable health checks | | `path` | string | `/` | HTTP endpoint path | | `interval` | duration | `30s` | Check frequency | | `timeout` | duration | `5s` | Request timeout | | `retries` | integer | `3` | Failures before restart | | `expected_status` | integer | `200` | Expected HTTP status |"},{"location":"configuration-enhanced/#tls-configuration","title":"TLS Configuration","text":"tls - HTTPS and certificates  <pre><code># Per-app TLS\napps:\n  - name: web\n    hostname: myapp.com\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@myapp.com\n      staging: false\n\n# Global TLS\ntls:\n  enabled: true\n  cert_dir: ./certs\n  force_https: true\n</code></pre>   ### Per-App TLS  | Parameter | Type | Default | Description | |-----------|------|---------|-------------| | `enabled` | boolean | `false` | Enable HTTPS | | `auto_cert` | boolean | `false` | Use Let's Encrypt | | `email` | string | required | Email for certificates | | `staging` | boolean | `false` | Use staging certificates |  ### Global TLS  | Parameter | Type | Default | Description | |-----------|------|---------|-------------| | `enabled` | boolean | `false` | Global HTTPS default | | `cert_dir` | string | `./certs` | Certificate storage | | `force_https` | boolean | `false` | Redirect HTTP\u2192HTTPS |"},{"location":"configuration-enhanced/#complete-example","title":"Complete Example","text":"Multi-app production setup <pre><code>server:\n  http_port: 80\n  https_port: 443\n  log_level: warn\n\napps:\n  - name: web\n    hostname: myapp.com\n    port: 3000\n    command: node\n    args: [\"dist/server.js\"]\n    environment:\n      NODE_ENV: production\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@myapp.com\n    health_check:\n      enabled: true\n      path: /health\n\n  - name: api\n    hostname: api.myapp.com\n    port: 8000\n    command: uvicorn\n    args: [\"main:app\", \"--host\", \"0.0.0.0\"]\n    tls:\n      enabled: true\n      auto_cert: true\n      email: api@myapp.com\n    restart_policy:\n      enabled: true\n      max_retries: 5\n\ntls:\n  enabled: true\n  cert_dir: /var/lib/guvnor/certs\n  force_https: true\n</code></pre>   This configuration runs two applications:  - **Web app** at `https://myapp.com` with health monitoring - **API service** at `https://api.myapp.com` with auto-restart  Both use automatic Let's Encrypt certificates."},{"location":"configuration-enhanced/#validation","title":"Validation","text":"Check Configuration Validate your guvnor.yaml before starting <pre><code>guvnor validate\n</code></pre>  Common validation errors: - Duplicate app names - Port conflicts   - Invalid hostnames - Missing required fields"},{"location":"configuration/","title":"Configuration Reference","text":"<p>Complete reference for <code>guvnor.yaml</code> configuration.</p>"},{"location":"configuration/#server-configuration","title":"Server Configuration","text":"<pre><code>server:\n  http_port: 8080      # Default: 8080\n  https_port: 8443     # Default: 8443  \n  log_level: info      # debug, info, warn, error\n</code></pre>"},{"location":"configuration/#application-configuration","title":"Application Configuration","text":""},{"location":"configuration/#required-parameters","title":"Required Parameters","text":"<pre><code>apps:\n  - name: webapp       # Required: unique identifier\n    command: node      # Required: command to run\n</code></pre>"},{"location":"configuration/#optional-parameters","title":"Optional Parameters","text":"<pre><code>apps:\n  - name: webapp\n    hostname: web.localhost    # Default: {name}.localhost\n    port: 3000                # Default: auto-assigned\n    args: [\"server.js\"]       # Default: []\n    working_dir: ./app        # Default: current dir\n</code></pre>"},{"location":"configuration/#multi-app-configuration","title":"Multi-App Configuration","text":"<pre><code>server:\n  http_port: 8080\n  https_port: 8443\n\napps:\n  # Frontend application\n  - name: frontend\n    hostname: web.localhost     # Routes requests to this app\n    port: 3000\n    command: npm\n    args: [\"start\"]\n\n  # API backend\n  - name: api\n    hostname: api.localhost     # Different hostname\n    port: 8000\n    command: uvicorn\n    args: [\"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n    tls:\n      enabled: true\n      auto_cert: true\n\n  # Admin panel with auto-generated hostname (admin.localhost)\n  - name: admin\n    port: 9000\n    command: python\n    args: [\"-m\", \"streamlit\", \"run\", \"admin.py\"]\n</code></pre>"},{"location":"configuration/#production-configuration","title":"Production Configuration","text":"<pre><code>server:\n  http_port: 80               # Standard ports for production\n  https_port: 443\n  log_level: warn             # Reduce log verbosity\n\napps:\n  - name: web-app\n    hostname: myapp.com       # Production domain\n    port: 3000\n    command: node\n    args: [\"dist/server.js\"]  # Production build\n\n    tls:\n      enabled: true\n      auto_cert: true         # Let's Encrypt certificates\n      email: admin@myapp.com\n      staging: false          # Production certificates\n\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n    restart_policy:\n      enabled: true\n      max_retries: 10\n      backoff: 10s\n\n# Global settings\ntls:\n  enabled: true\n  cert_dir: /var/lib/guvnor/certs\n  force_https: true           # Redirect HTTP to HTTPS\n</code></pre>"},{"location":"configuration/#smart-defaults","title":"Smart Defaults","text":"<p>When values are omitted, guvnor uses intelligent defaults:</p> <ul> <li>hostname: Auto-generated as <code>{app-name}.localhost</code></li> <li>port: Auto-assigned starting from 3000</li> <li>working_dir: Current directory</li> <li>tls.email: Inherits from global TLS settings</li> <li>health_check.path: <code>/</code> for most apps, framework-specific for detected apps</li> <li>restart_policy: Enabled with reasonable defaults</li> </ul>"},{"location":"configuration/#environment-variables","title":"Environment Variables","text":"<pre><code>apps:\n  - name: my-app\n    environment:\n      NODE_ENV: production\n      DATABASE_URL: postgres://localhost/mydb\n      PORT: \"3000\"            # Always use strings for port numbers\n</code></pre>"},{"location":"configuration/#health-checks","title":"Health Checks","text":"<pre><code>apps:\n  - name: web-app\n    health_check:\n      enabled: true\n      path: /health           # HTTP endpoint to check\n      interval: 30s           # How often to check\n      timeout: 5s             # Request timeout\n      retries: 3              # Failures before marking unhealthy\n      expected_status: 200    # Expected HTTP status code\n</code></pre>"},{"location":"configuration/#tls-configuration","title":"TLS Configuration","text":""},{"location":"configuration/#per-app-tls","title":"Per-App TLS","text":"<pre><code>apps:\n  - name: secure-app\n    hostname: secure.example.com\n    tls:\n      enabled: true\n      auto_cert: true         # Automatic Let's Encrypt\n      email: admin@example.com\n      staging: false          # Use production certificates\n</code></pre>"},{"location":"configuration/#manual-certificates","title":"Manual Certificates","text":"<pre><code>apps:\n  - name: custom-cert-app\n    tls:\n      enabled: true\n      auto_cert: false        # Manual certificate management\n      cert_file: /path/to/cert.pem\n      key_file: /path/to/key.pem\n</code></pre>"},{"location":"configuration/#restart-policies","title":"Restart Policies","text":"<pre><code>apps:\n  - name: critical-app\n    restart_policy:\n      enabled: true\n      max_retries: 10         # Maximum restart attempts\n      backoff: 5s             # Delay between restarts\n      backoff_multiplier: 2.0 # Exponential backoff\n      max_backoff: 300s       # Maximum backoff delay\n</code></pre>"},{"location":"configuration/#configuration-validation","title":"Configuration Validation","text":"<p>Guvnor validates configuration on startup. Common validation rules:</p> <ul> <li>App names must be unique</li> <li>Ports must not conflict between apps</li> <li>Hostnames should be valid domain names</li> <li>TLS email required when auto_cert is enabled</li> <li>Working directories must exist</li> </ul> <p>Run <code>guvnor validate</code> to check configuration without starting apps.</p>"},{"location":"configuration/#configuration-generation","title":"Configuration Generation","text":"<p>Use <code>guvnor init</code> to auto-generate configuration based on detected applications in the current directory. The generated configuration includes:</p> <ul> <li>Detected application types and commands</li> <li>Appropriate port assignments</li> <li>Framework-specific health check paths</li> <li>Development-friendly defaults with production-ready comments</li> </ul>"},{"location":"examples/","title":"Examples","text":"<p>Real-world configuration examples for common scenarios.</p>"},{"location":"examples/#nodejs-app","title":"Node.js App","text":"<pre><code>apps:\n  - name: webapp\n    hostname: app.localhost\n    command: npm\n    args: [\"start\"]\n    environment:\n      NODE_ENV: development\n      PORT: \"3000\"\n</code></pre>"},{"location":"examples/#python-fastapi","title":"Python FastAPI","text":"<pre><code>apps:\n  - name: api\n    hostname: api.localhost\n    command: uvicorn\n    args: [\"main:app\", \"--host\", \"0.0.0.0\", \"--reload\"]\n    environment:\n      DATABASE_URL: sqlite:///./test.db\n</code></pre>"},{"location":"examples/#go-application","title":"Go Application","text":"<pre><code>apps:\n  - name: server\n    hostname: go.localhost\n    command: go\n    args: [\"run\", \"main.go\"]\n    working_dir: ./cmd/server\n</code></pre>"},{"location":"examples/#multi-service-architecture","title":"Multi-Service Architecture","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n\napps:\n  # Frontend React app\n  - name: frontend\n    hostname: web.localhost\n    port: 3000\n    command: npm\n    args: [\"start\"]\n\n  # API backend\n  - name: api\n    hostname: api.localhost\n    port: 8000\n    command: uvicorn\n    args: [\"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n\n  # Background worker\n  - name: worker\n    port: 8001\n    command: celery\n    args: [\"-A\", \"app\", \"worker\"]\n\n  # Redis server\n  - name: redis\n    port: 6379\n    command: redis-server\n    args: [\"--port\", \"6379\"]\n</code></pre>"},{"location":"examples/#real-world-production-example","title":"Real-World Production Example","text":"<pre><code># Production multi-app setup\nserver:\n  http_port: 80\n  https_port: 443\n  log_level: warn\n\napps:\n  # Main web application\n  - name: webapp\n    hostname: mycompany.com\n    port: 3000\n    command: node\n    args: [\"dist/server.js\"]\n    environment:\n      NODE_ENV: production\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@mycompany.com\n      staging: false\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 10\n      backoff: 10s\n\n  # API service\n  - name: api\n    hostname: api.mycompany.com\n    port: 8000\n    command: gunicorn\n    args: [\"app.wsgi:application\", \"--bind\", \"0.0.0.0:8000\", \"--workers\", \"4\"]\n    environment:\n      DJANGO_SETTINGS_MODULE: app.settings.production\n    tls:\n      enabled: true\n      auto_cert: true\n      email: api@mycompany.com\n    health_check:\n      enabled: true\n      path: /api/health\n\n  # Admin interface\n  - name: admin\n    hostname: admin.mycompany.com\n    port: 9000\n    command: python\n    args: [\"-m\", \"streamlit\", \"run\", \"admin_dashboard.py\"]\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@mycompany.com\n\n# Global TLS settings\ntls:\n  enabled: true\n  cert_dir: /var/lib/guvnor/certs\n  force_https: true\n</code></pre>"},{"location":"examples/#microservices-example","title":"Microservices Example","text":"<pre><code># Microservices with service discovery\napps:\n  # API Gateway\n  - name: gateway\n    hostname: gateway.localhost\n    port: 8080\n    command: node\n    args: [\"gateway.js\"]\n\n  # Authentication service\n  - name: auth-service\n    hostname: auth.localhost\n    port: 8001\n    command: python\n    args: [\"-m\", \"auth.main\"]\n\n  # User service\n  - name: user-service\n    hostname: users.localhost  \n    port: 8002\n    command: python\n    args: [\"-m\", \"users.main\"]\n\n  # Order service\n  - name: order-service\n    hostname: orders.localhost\n    port: 8003\n    command: go\n    args: [\"run\", \"cmd/server/main.go\"]\n\n  # Notification service\n  - name: notifications\n    hostname: notifications.localhost\n    port: 8004\n    command: ./target/release/notifications\n</code></pre>"},{"location":"examples/#development-with-hot-reload","title":"Development with Hot Reload","text":"<pre><code># Development configuration with auto-reload\napps:\n  # Next.js with hot reload\n  - name: frontend\n    hostname: web.localhost\n    command: npm\n    args: [\"run\", \"dev\"]\n\n  # FastAPI with auto-reload\n  - name: api\n    hostname: api.localhost\n    command: uvicorn\n    args: [\"main:app\", \"--reload\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n\n  # Rust with cargo watch\n  - name: service\n    hostname: service.localhost\n    command: cargo\n    args: [\"watch\", \"-x\", \"run\"]\n</code></pre>"},{"location":"examples/#docker-integration","title":"Docker Integration","text":"<pre><code># Mix of native processes and containers\napps:\n  # Native Node.js app\n  - name: webapp\n    command: node\n    args: [\"server.js\"]\n    port: 3000\n\n  # Containerized database\n  - name: postgres\n    command: docker\n    args: [\"run\", \"--rm\", \"-p\", \"5432:5432\", \"-e\", \"POSTGRES_PASSWORD=secret\", \"postgres:15\"]\n    port: 5432\n\n  # Redis container\n  - name: redis\n    command: docker\n    args: [\"run\", \"--rm\", \"-p\", \"6379:6379\", \"redis:7\"]\n    port: 6379\n</code></pre>"},{"location":"examples/#complex-saas-application","title":"Complex SaaS Application","text":"<pre><code># Full SaaS deployment\nserver:\n  http_port: 80\n  https_port: 443\n\napps:\n  # Frontend application\n  - name: web\n    hostname: app.saascompany.com\n    port: 3000\n    command: node\n    args: [\"dist/server.js\"]\n    environment:\n      NODE_ENV: production\n      API_URL: https://api.saascompany.com\n    tls:\n      enabled: true\n      auto_cert: true\n      email: ops@saascompany.com\n\n  # Main API\n  - name: api\n    hostname: api.saascompany.com\n    port: 8000\n    command: gunicorn\n    args: [\"app.wsgi:application\", \"--bind\", \"0.0.0.0:8000\", \"--workers\", \"8\"]\n    environment:\n      DATABASE_URL: postgres://user:pass@db.internal:5432/app\n      REDIS_URL: redis://cache.internal:6379\n    tls:\n      enabled: true\n      auto_cert: true\n      email: api@saascompany.com\n    health_check:\n      enabled: true\n      path: /health\n      interval: 15s\n\n  # Background job processor\n  - name: worker-high\n    port: 8001\n    command: celery\n    args: [\"-A\", \"app\", \"worker\", \"-Q\", \"high_priority\", \"--concurrency=4\"]\n    restart_policy:\n      enabled: true\n      max_retries: 5\n\n  - name: worker-low\n    port: 8002  \n    command: celery\n    args: [\"-A\", \"app\", \"worker\", \"-Q\", \"low_priority\", \"--concurrency=2\"]\n\n  # Scheduled tasks\n  - name: scheduler\n    port: 8003\n    command: celery\n    args: [\"-A\", \"app\", \"beat\"]\n\n  # Admin dashboard\n  - name: admin\n    hostname: admin.saascompany.com\n    port: 9000\n    command: python\n    args: [\"manage.py\", \"runserver\", \"0.0.0.0:9000\"]\n    environment:\n      DJANGO_SETTINGS_MODULE: app.settings.admin\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@saascompany.com\n\ntls:\n  enabled: true\n  cert_dir: /var/lib/guvnor/certs\n  force_https: true\n</code></pre>"},{"location":"examples/#cli-usage-examples","title":"CLI Usage Examples","text":"<pre><code># Basic operations\nguvnor init                    # Generate configuration\nguvnor start                   # Start all apps\nguvnor start webapp api        # Start specific apps  \nguvnor stop worker             # Stop specific app\nguvnor restart api             # Restart app\nguvnor status                  # Show all app status\nguvnor status webapp           # Show specific app status\nguvnor logs                    # View all logs\nguvnor logs webapp             # View specific app logs\nguvnor validate                # Validate configuration\n\n# Production deployment\nguvnor start --domain myapp.com --email admin@myapp.com\n\n# Development with debug logging\nguvnor start --log-level debug\n</code></pre>"},{"location":"examples/#health-check-examples","title":"Health Check Examples","text":"<pre><code>apps:\n  # HTTP health check\n  - name: api\n    health_check:\n      enabled: true\n      path: /api/v1/health\n      interval: 30s\n      timeout: 5s\n      retries: 3\n      expected_status: 200\n\n  # Custom command health check\n  - name: worker\n    health_check:\n      enabled: true\n      command: [\"python\", \"health_check.py\"]\n      interval: 60s\n      timeout: 10s\n\n  # TCP port check\n  - name: database\n    health_check:\n      enabled: true\n      type: tcp\n      port: 5432\n      interval: 10s\n</code></pre>"},{"location":"examples/#environment-specific-configurations","title":"Environment-Specific Configurations","text":""},{"location":"examples/#development","title":"Development","text":"<pre><code># dev.guvnor.yaml\nserver:\n  log_level: debug\n\napps:\n  - name: webapp\n    command: npm\n    args: [\"run\", \"dev\"]\n    environment:\n      NODE_ENV: development\n      API_URL: http://api.localhost:8080\n</code></pre>"},{"location":"examples/#production","title":"Production","text":"<pre><code># prod.guvnor.yaml\nserver:\n  http_port: 80\n  https_port: 443\n  log_level: warn\n\napps:\n  - name: webapp\n    hostname: myapp.com\n    command: node\n    args: [\"dist/server.js\"]\n    environment:\n      NODE_ENV: production\n    tls:\n      enabled: true\n      auto_cert: true\n      email: ops@myapp.com\n</code></pre> <p>Load specific configuration: <pre><code>guvnor start --config dev.guvnor.yaml\nguvnor start --config prod.guvnor.yaml\n</code></pre></p>"},{"location":"getting-started-enhanced/","title":"Getting Started","text":"<p>Get up and running with Guvnor in minutes.</p>"},{"location":"getting-started-enhanced/#installation","title":"Installation","text":"Download Binary Install the latest release directly <pre><code>curl -sSL https://github.com/gleicon/guvnor/releases/latest/download/guvnor-$(uname -s)-$(uname -m) -o guvnor\nchmod +x guvnor\nsudo mv guvnor /usr/local/bin/\n</code></pre> Install with Go Build from source using Go toolchain <pre><code>go install github.com/gleicon/guvnor/cmd/guvnor@latest\n</code></pre>"},{"location":"getting-started-enhanced/#quick-start-scenarios","title":"Quick Start Scenarios","text":""},{"location":"getting-started-enhanced/#new-project","title":"New Project","text":"Create a new project <pre><code>mkdir my-app &amp;&amp; cd my-app\necho 'console.log(\"Hello\")' &gt; server.js\necho '{\"name\": \"my-app\"}' &gt; package.json\n\nguvnor init\nguvnor start\n</code></pre>   **What happens:** 1. Guvnor detects Node.js from `package.json` 2. Generates `guvnor.yaml` with smart defaults 3. Starts your app at `http://my-app.localhost:8080`  **Generated config:** <pre><code>apps:\n  - name: my-app\n    hostname: my-app.localhost\n    command: node\n    args: [\"server.js\"]\n</code></pre>"},{"location":"getting-started-enhanced/#existing-project","title":"Existing Project","text":"Add Guvnor to existing project <pre><code>cd my-existing-project\nguvnor init\nguvnor start\n</code></pre>   Guvnor auto-detects your project type:  | Project Type | Detection | Generated Command | |--------------|-----------|-------------------| | **Node.js** | `package.json` | `npm start` or `node server.js` | | **Python** | `requirements.txt` | `python app.py` | | **Go** | `go.mod` | `go run .` | | **Rust** | `Cargo.toml` | `cargo run` | | **PHP** | `composer.json` | `php -S 0.0.0.0:3000` |"},{"location":"getting-started-enhanced/#herokuprocfile-app","title":"Heroku/Procfile App","text":"Migrate from Heroku <pre><code># Your existing Procfile:\n# web: gunicorn app:app --port $PORT\n# worker: celery -A app worker\n\nguvnor init     # Reads Procfile\nguvnor start    # Runs both processes\n</code></pre>   **Process mapping:** - `web` \u2192 Gets hostname routing at `http://web.localhost:8080` - `worker` \u2192 Runs in background (no HTTP routing) - `.env` files are preserved and loaded automatically"},{"location":"getting-started-enhanced/#multi-app-setup","title":"Multi-App Setup","text":"Run multiple applications <pre><code># guvnor.yaml\napps:\n  - name: frontend\n    hostname: web.localhost\n    command: npm\n    args: [\"start\"]\n\n  - name: api\n    hostname: api.localhost\n    command: uvicorn\n    args: [\"main:app\"]\n\n  - name: worker\n    command: python\n    args: [\"worker.py\"]\n    # No hostname = background service\n</code></pre>   **Access your apps:** - Frontend: `http://web.localhost:8080` - API: `http://api.localhost:8080` - Worker: Background process (no HTTP access)  Each app gets automatic: - Process management - Health monitoring   - Log aggregation - Restart on failure"},{"location":"getting-started-enhanced/#production-deployment","title":"Production Deployment","text":"HTTPS <code>automatic certificates</code>  Deploy with zero-config HTTPS using Let's Encrypt.   Production with auto HTTPS <pre><code>guvnor start --domain myapp.com --email admin@myapp.com\n</code></pre>   **Automatic setup:** - Let's Encrypt SSL certificates - HTTP \u2192 HTTPS redirects - Production logging - Process monitoring  **Configuration generated:** <pre><code>server:\n  http_port: 80\n  https_port: 443\n\napps:\n  - name: myapp\n    hostname: myapp.com\n    tls:\n      enabled: true\n      auto_cert: true\n      email: admin@myapp.com\n</code></pre>"},{"location":"getting-started-enhanced/#daily-commands","title":"Daily Commands","text":"Process Management Common development tasks <pre><code>guvnor start           # Start all apps\nguvnor start webapp    # Start specific app\nguvnor stop            # Stop all apps  \nguvnor restart api     # Restart specific app\nguvnor status          # Show app status\nguvnor logs            # View all logs\nguvnor logs webapp -f  # Follow specific app logs\n</code></pre>"},{"location":"getting-started-enhanced/#configuration-priority","title":"Configuration Priority","text":"<p>How Guvnor decides what to run:</p>   ### 1. guvnor.yaml (Primary) Explicit configuration file created by `guvnor init` or manually.  ### 2. Procfile (Fallback)   Heroku-style process definitions for 12-factor app compatibility.  ### 3. Auto-detection (Last Resort) Scans project files to infer application type and commands.   Environment Variables   **Priority (highest to lowest):** 1. `guvnor.yaml` app environment 2. `.env` file variables 3. System environment"},{"location":"getting-started-enhanced/#file-structure","title":"File Structure","text":"<p>After running <code>guvnor init</code>, you'll have:</p> <pre><code>my-project/\n\u251c\u2500\u2500 guvnor.yaml    # Primary configuration\n\u251c\u2500\u2500 .env           # Environment variables (optional)\n\u251c\u2500\u2500 Procfile       # Process definitions (optional)\n\u2514\u2500\u2500 your-app-files/\n</code></pre>"},{"location":"getting-started-enhanced/#next-steps","title":"Next Steps","text":"### Learn More - [Configuration Reference](configuration.html) - Complete guvnor.yaml options - [Common Workflows](workflows.html) - Daily development tasks - [Examples](examples.html) - Real-world configurations  ### Platform-Specific   - [Next.js Guide](nextjs.html) - [React Guide](react.html) - [Go Guide](go.html) - [Python Guide](python.html)  ### Production - [SystemD Service](systemd.html) - Run as system service - [Architecture](architecture.html) - How Guvnor works   Get Help Resources for troubleshooting  - **Validate config:** `guvnor validate` - **Debug logs:** `guvnor logs --level debug` - **GitHub Issues:** [Report problems](https://github.com/gleicon/guvnor/issues)"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<p>Download binary: <pre><code>curl -sSL https://github.com/gleicon/guvnor/releases/latest/download/guvnor-$(uname -s)-$(uname -m) -o guvnor\nchmod +x guvnor\nsudo mv guvnor /usr/local/bin/\n</code></pre></p> <p>Or install with Go: <pre><code>go install github.com/gleicon/guvnor/cmd/guvnor@latest\n</code></pre></p>"},{"location":"getting-started/#new-project","title":"New Project","text":"<pre><code>mkdir my-app &amp;&amp; cd my-app\necho 'console.log(\"Hello\")' &gt; server.js\necho '{\"name\": \"my-app\"}' &gt; package.json\n\nguvnor init\nguvnor start\n</code></pre> <p>Visit <code>http://my-app.localhost:8080</code></p>"},{"location":"getting-started/#existing-project","title":"Existing Project","text":"<pre><code>cd my-project\nguvnor init\nguvnor start\n</code></pre>"},{"location":"getting-started/#foreman-and-procfileheroku-style-app","title":"Foreman and Procfile/Heroku style app","text":"<pre><code># Existing Procfile:\n# web: gunicorn app:app\n# worker: celery -A app worker\n\nguvnor init     # Uses Procfile\nguvnor start\n</code></pre> <p>Web runs on <code>http://web.localhost:8080</code>, worker in background.</p>"},{"location":"getting-started/#multiple-apps","title":"Multiple Apps","text":"<p>Edit <code>guvnor.yaml</code>:</p> <pre><code>apps:\n  - name: web\n    command: npm\n    args: [\"start\"]\n  - name: api\n    command: python\n    args: [\"api.py\"]\n</code></pre> <p>Each app gets its own hostname.</p>"},{"location":"getting-started/#production","title":"Production","text":"<pre><code>guvnor start --domain myapp.com --email admin@myapp.com\n</code></pre> <p>Automatic HTTPS with Let's Encrypt.</p>"},{"location":"getting-started/#daily-use","title":"Daily Use","text":"<pre><code>guvnor start    # Start apps\nguvnor logs     # View logs\nguvnor restart  # Restart all\nguvnor stop     # Stop all\n</code></pre>"},{"location":"getting-started/#config-priority","title":"Config Priority","text":"<ol> <li><code>guvnor.yaml</code> (primary)</li> <li><code>Procfile</code> (fallback)</li> <li>Auto-detection</li> </ol>"},{"location":"getting-started/#files","title":"Files","text":"<ul> <li><code>guvnor.yaml</code> - Main config</li> <li><code>Procfile</code> - Foreman compatibility</li> <li><code>.env</code> - Environment variables</li> </ul>"},{"location":"getting-started/#docs","title":"Docs","text":"<ul> <li>Config Reference</li> <li>Examples</li> <li>Production</li> </ul>"},{"location":"go/","title":"How to run your Go app with Guvnor","text":""},{"location":"go/#setup","title":"Setup","text":"<pre><code>cd my-go-app\ngo mod tidy\ngo build -o myapp\nguvnor init\n</code></pre>"},{"location":"go/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: go-app\n    hostname: localhost\n    port: 3000\n    command: ./myapp\n    working_dir: /path/to/your/go-app\n    environment:\n      GO_ENV: \"production\"\n      PORT: \"3000\"\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 3s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"go/#usage","title":"Usage","text":"<pre><code># Production deployment\ngo build -o myapp               # Build first\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Development\nguvnor start                    # If using dev config below\n</code></pre>"},{"location":"go/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"go/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: go-dev\n    command: go\n    args: [\"run\", \"main.go\"]\n    environment:\n      GO_ENV: \"development\"\n</code></pre>"},{"location":"go/#cross-compiled-binary","title":"Cross-compiled Binary","text":"<pre><code>apps:\n  - name: go-app\n    command: ./myapp-linux-amd64\n    environment:\n      GO_ENV: \"production\"\n</code></pre>"},{"location":"go/#with-air-hot-reload","title":"With Air (Hot Reload)","text":"<pre><code>apps:\n  - name: go-air\n    command: air\n    args: [\"-c\", \".air.toml\"]\n    environment:\n      GO_ENV: \"development\"\n</code></pre>"},{"location":"go/#build-commands","title":"Build Commands","text":"<pre><code># Local build\ngo build -o myapp\n\n# Cross-compile for Linux\nGOOS=linux GOARCH=amd64 go build -o myapp-linux-amd64\n\n# Build with optimizations\ngo build -ldflags \"-w -s\" -o myapp\n\n# Static binary\nCGO_ENABLED=0 go build -a -ldflags \"-w -s\" -o myapp\n</code></pre>"},{"location":"go/#required-gomod","title":"Required go.mod","text":"<pre><code>module my-go-app\n\ngo 1.21\n\nrequire (\n    // Your dependencies\n)\n</code></pre>"},{"location":"java/","title":"How to run your Java app with Guvnor","text":""},{"location":"java/#setup","title":"Setup","text":"<pre><code>cd my-java-app\nmvn clean package\nguvnor init\n</code></pre>"},{"location":"java/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: java-app\n    hostname: localhost\n    port: 3000\n    command: java\n    args:\n      - \"-jar\"\n      - \"target/myapp.jar\"\n      - \"--server.port=3000\"\n    working_dir: /path/to/your/java-app\n    environment:\n      JAVA_OPTS: \"-Xms512m -Xmx1024m\"\n      SPRING_PROFILES_ACTIVE: \"production\"\n    health_check:\n      enabled: true\n      path: /actuator/health\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 5s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"java/#usage","title":"Usage","text":"<pre><code># Production deployment\nmvn clean package               # Build first\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Development\nguvnor start                    # If using dev config below\n</code></pre>"},{"location":"java/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"java/#spring-boot-application","title":"Spring Boot Application","text":"<pre><code>apps:\n  - name: spring-boot\n    command: java\n    args: [\"-jar\", \"target/myapp.jar\"]\n    environment:\n      JAVA_OPTS: \"-Xms256m -Xmx512m\"\n      SPRING_PROFILES_ACTIVE: \"prod\"\n</code></pre>"},{"location":"java/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: java-dev\n    command: mvn\n    args: [\"spring-boot:run\"]\n    environment:\n      SPRING_PROFILES_ACTIVE: \"development\"\n</code></pre>"},{"location":"java/#with-jvm-arguments","title":"With JVM Arguments","text":"<pre><code>apps:\n  - name: java-tuned\n    command: java\n    args:\n      - \"-XX:+UseG1GC\"\n      - \"-XX:MaxGCPauseMillis=200\"\n      - \"-Xms1g\"\n      - \"-Xmx2g\"\n      - \"-jar\"\n      - \"target/myapp.jar\"\n</code></pre>"},{"location":"java/#gradle-application","title":"Gradle Application","text":"<pre><code>apps:\n  - name: gradle-app\n    command: java\n    args: [\"-jar\", \"build/libs/myapp.jar\"]\n    environment:\n      JAVA_OPTS: \"-server\"\n</code></pre>"},{"location":"java/#build-commands","title":"Build Commands","text":"<pre><code># Maven build\nmvn clean package\nmvn clean package -DskipTests\n\n# Gradle build\ngradle clean build\ngradle clean bootJar\n\n# Create executable JAR\nmvn clean package spring-boot:repackage\n</code></pre>"},{"location":"java/#required-pomxml-maven","title":"Required pom.xml (Maven)","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;myapp&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;17&lt;/java.version&gt;\n        &lt;spring.boot.version&gt;3.1.0&lt;/spring.boot.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"java/#java-requirements","title":"Java Requirements","text":"<ul> <li>Java 17 or higher</li> <li>Maven 3.6+ or Gradle 7+</li> <li>Spring Boot 3.x for web applications</li> </ul>"},{"location":"nextjs/","title":"How to run your Next.js app with Guvnor","text":""},{"location":"nextjs/#setup","title":"Setup","text":"<pre><code>cd my-nextjs-app\nnpm install\nnpm run build\nguvnor init\n</code></pre>"},{"location":"nextjs/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: nextjs-app\n    hostname: localhost\n    port: 3000\n    command: npm\n    args:\n      - \"start\"\n    working_dir: /path/to/your/nextjs-app\n    environment:\n      NODE_ENV: \"production\"\n      PORT: \"3000\"\n    health_check:\n      enabled: true\n      path: /\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 3s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"nextjs/#usage","title":"Usage","text":"<pre><code># Development\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Production deployment\nnpm run build                   # Build first\nguvnor start                    # Then start\n</code></pre>"},{"location":"nextjs/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"nextjs/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: nextjs-dev\n    command: npm\n    args: [\"run\", \"dev\"]\n    environment:\n      NODE_ENV: \"development\"\n</code></pre>"},{"location":"nextjs/#direct-node","title":"Direct Node","text":"<pre><code>apps:\n  - name: nextjs-app\n    command: node\n    args: [\".next/standalone/server.js\"]\n    environment:\n      NODE_ENV: \"production\"\n</code></pre>"},{"location":"nextjs/#static-export","title":"Static Export","text":"<pre><code>apps:\n  - name: nextjs-static\n    command: npx\n    args: [\"serve\", \"out\", \"-p\", \"3000\"]\n</code></pre>"},{"location":"nextjs/#required-packagejson-scripts","title":"Required package.json scripts","text":"<pre><code>{\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n  }\n}\n</code></pre>"},{"location":"php/","title":"How to run your PHP app with Guvnor","text":""},{"location":"php/#setup","title":"Setup","text":"<pre><code>cd my-php-app\ncomposer install --no-dev --optimize-autoloader\nguvnor init\n</code></pre>"},{"location":"php/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: php-app\n    hostname: localhost\n    port: 3000\n    command: php\n    args:\n      - \"-S\"\n      - \"0.0.0.0:3000\"\n      - \"-t\"\n      - \"public\"\n    working_dir: /path/to/your/php-app\n    environment:\n      APP_ENV: \"production\"\n      PHP_CLI_SERVER_WORKERS: \"4\"\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 3s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"php/#usage","title":"Usage","text":"<pre><code># Production deployment\ncomposer install --no-dev       # Install dependencies\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Development\nguvnor start                    # If using dev config below\n</code></pre>"},{"location":"php/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"php/#laravel-application","title":"Laravel Application","text":"<pre><code>apps:\n  - name: laravel-app\n    command: php\n    args: [\"artisan\", \"serve\", \"--host=0.0.0.0\", \"--port=3000\"]\n    environment:\n      APP_ENV: \"production\"\n      APP_KEY: \"your-app-key\"\n</code></pre>"},{"location":"php/#with-php-fpm-nginx","title":"With PHP-FPM + Nginx","text":"<pre><code>apps:\n  - name: php-fpm\n    command: php-fpm\n    args: [\"--nodaemonize\", \"--fpm-config\", \"/etc/php-fpm.conf\"]\n    port: 9000\n\n  - name: nginx-php\n    hostname: localhost\n    port: 3000\n    command: nginx\n    args: [\"-g\", \"daemon off;\"]\n</code></pre>"},{"location":"php/#symfony-application","title":"Symfony Application","text":"<pre><code>apps:\n  - name: symfony-app\n    command: php\n    args: [\"-S\", \"0.0.0.0:3000\", \"-t\", \"public\"]\n    environment:\n      APP_ENV: \"prod\"\n      APP_SECRET: \"your-app-secret\"\n</code></pre>"},{"location":"php/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: php-dev\n    command: php\n    args: [\"-S\", \"0.0.0.0:3000\", \"-t\", \"public\"]\n    environment:\n      APP_ENV: \"development\"\n      APP_DEBUG: \"true\"\n</code></pre>"},{"location":"php/#required-composerjson","title":"Required composer.json","text":"<pre><code>{\n    \"name\": \"my/php-app\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \"&gt;=8.1\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"src/\"\n        }\n    },\n    \"config\": {\n        \"optimize-autoloader\": true\n    }\n}\n</code></pre>"},{"location":"php/#php-requirements","title":"PHP Requirements","text":"<ul> <li>PHP 8.1 or higher</li> <li>Extensions: mbstring, openssl, pdo, tokenizer</li> <li>Composer for dependency management</li> </ul>"},{"location":"react/","title":"How to run your React app with Guvnor","text":""},{"location":"react/#setup","title":"Setup","text":"<pre><code>cd my-react-app\nnpm install\nnpm run build\nguvnor init\n</code></pre>"},{"location":"react/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: react-app\n    hostname: localhost\n    port: 3000\n    command: npx\n    args:\n      - \"serve\"\n      - \"-s\"\n      - \"build\"\n      - \"-l\"\n      - \"3000\"\n    working_dir: /path/to/your/react-app\n    environment:\n      NODE_ENV: \"production\"\n    health_check:\n      enabled: true\n      path: /\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 3s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"react/#usage","title":"Usage","text":"<pre><code># Production deployment\nnpm run build                   # Build first\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Development\nguvnor start                    # If using dev config below\n</code></pre>"},{"location":"react/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"react/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: react-dev\n    command: npm\n    args: [\"start\"]\n    environment:\n      NODE_ENV: \"development\"\n      BROWSER: \"none\"\n</code></pre>"},{"location":"react/#using-express-server","title":"Using Express Server","text":"<pre><code>apps:\n  - name: react-express\n    command: node\n    args: [\"server.js\"]\n    environment:\n      NODE_ENV: \"production\"\n</code></pre>"},{"location":"react/#using-nginx-style-static","title":"Using Nginx-style Static","text":"<pre><code>apps:\n  - name: react-static\n    command: python3\n    args: [\"-m\", \"http.server\", \"3000\"]\n    working_dir: /path/to/your/react-app/build\n</code></pre>"},{"location":"react/#required-packagejson-scripts","title":"Required package.json scripts","text":"<pre><code>{\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\"\n  },\n  \"dependencies\": {\n    \"serve\": \"^14.0.0\"\n  }\n}\n</code></pre>"},{"location":"react/#install-serve-globally","title":"Install serve globally","text":"<pre><code>npm install -g serve\n</code></pre>"},{"location":"rust/","title":"How to run your Rust app with Guvnor","text":""},{"location":"rust/#setup","title":"Setup","text":"<pre><code>cd my-rust-app\ncargo build --release\nguvnor init\n</code></pre>"},{"location":"rust/#configuration","title":"Configuration","text":"<pre><code># guvnor.yaml\nserver:\n  http_port: 8080\n  https_port: 8443\n  log_level: info\n\napps:\n  - name: rust-app\n    hostname: localhost\n    port: 3000\n    command: ./target/release/myapp\n    working_dir: /path/to/your/rust-app\n    environment:\n      RUST_ENV: \"production\"\n      PORT: \"3000\"\n    health_check:\n      enabled: true\n      path: /health\n      interval: 30s\n    restart_policy:\n      enabled: true\n      max_retries: 5\n      backoff: 3s\n\ntls:\n  enabled: false\n  auto_cert: false\n  cert_dir: ./certs\n</code></pre>"},{"location":"rust/#usage","title":"Usage","text":"<pre><code># Production deployment\ncargo build --release          # Build first\nguvnor start                    # Access: http://localhost:8080/\nguvnor logs                     # View logs\nguvnor status                   # Check status\nguvnor stop                     # Stop app\n\n# Development\nguvnor start                    # If using dev config below\n</code></pre>"},{"location":"rust/#alternative-configurations","title":"Alternative Configurations","text":""},{"location":"rust/#development-mode","title":"Development Mode","text":"<pre><code>apps:\n  - name: rust-dev\n    command: cargo\n    args: [\"run\"]\n    environment:\n      RUST_ENV: \"development\"\n</code></pre>"},{"location":"rust/#with-cargo-watch","title":"With Cargo Watch","text":"<pre><code>apps:\n  - name: rust-watch\n    command: cargo\n    args: [\"watch\", \"-x\", \"run\"]\n    environment:\n      RUST_ENV: \"development\"\n</code></pre>"},{"location":"rust/#debug-build","title":"Debug Build","text":"<pre><code>apps:\n  - name: rust-debug\n    command: ./target/debug/myapp\n    environment:\n      RUST_ENV: \"development\"\n      RUST_LOG: \"debug\"\n</code></pre>"},{"location":"rust/#build-commands","title":"Build Commands","text":"<pre><code># Release build\ncargo build --release\n\n# Debug build\ncargo build\n\n# Cross-compile for Linux\ncargo build --release --target x86_64-unknown-linux-gnu\n\n# Static binary with musl\ncargo build --release --target x86_64-unknown-linux-musl\n</code></pre>"},{"location":"rust/#required-cargotoml","title":"Required Cargo.toml","text":"<pre><code>[package]\nname = \"myapp\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n[[bin]]\nname = \"myapp\"\npath = \"src/main.rs\"\n\n[dependencies]\n# Your dependencies\n\n[profile.release]\nlto = true\ncodegen-units = 1\npanic = \"abort\"\n</code></pre>"},{"location":"systemd/","title":"Running Guvnor as a systemd service","text":""},{"location":"systemd/#create-systemd-service-file","title":"Create systemd service file","text":"<pre><code>sudo nano /etc/systemd/system/guvnor.service\n</code></pre> <pre><code>[Unit]\nDescription=Guvnor Process Manager\nAfter=network.target\nWants=network.target\n\n[Service]\nType=exec\nUser=www-data\nGroup=www-data\nWorkingDirectory=/opt/myapp\nExecStart=/usr/local/bin/guvnor start\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=mixed\nTimeoutStopSec=30\nRestart=always\nRestartSec=5\n\n# Security settings\nNoNewPrivileges=true\nPrivateTmp=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/opt/myapp\nReadWritePaths=/var/lib/guvnor\n\n# Environment\nEnvironment=PATH=/usr/local/bin:/usr/bin:/bin\nEnvironment=NODE_ENV=production\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"systemd/#setup-permissions","title":"Setup permissions","text":"<pre><code># Create guvnor user (optional)\nsudo useradd -r -s /bin/false -d /opt/myapp guvnor\n\n# Or use existing user\nsudo chown -R www-data:www-data /opt/myapp\nsudo chmod +x /usr/local/bin/guvnor\n\n# Create directories\nsudo mkdir -p /var/lib/guvnor/certs\nsudo chown -R www-data:www-data /var/lib/guvnor\n</code></pre>"},{"location":"systemd/#enable-and-start-service","title":"Enable and start service","text":"<pre><code># Reload systemd\nsudo systemctl daemon-reload\n\n# Enable service (start on boot)\nsudo systemctl enable guvnor\n\n# Start service now\nsudo systemctl start guvnor\n\n# Check status\nsudo systemctl status guvnor\n</code></pre>"},{"location":"systemd/#service-management-commands","title":"Service management commands","text":"<pre><code># Start service\nsudo systemctl start guvnor\n\n# Stop service  \nsudo systemctl stop guvnor\n\n# Restart service\nsudo systemctl restart guvnor\n\n# Reload configuration\nsudo systemctl reload guvnor\n\n# View logs\nsudo journalctl -u guvnor -f\n\n# View recent logs\nsudo journalctl -u guvnor --since \"1 hour ago\"\n\n# Enable/disable auto-start\nsudo systemctl enable guvnor\nsudo systemctl disable guvnor\n</code></pre>"},{"location":"systemd/#production-configuration","title":"Production configuration","text":"<pre><code>[Unit]\nDescription=Guvnor Process Manager\nAfter=network-online.target\nWants=network-online.target\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nType=exec\nUser=guvnor\nGroup=guvnor\nWorkingDirectory=/opt/myapp\nExecStart=/usr/local/bin/guvnor start --config /etc/guvnor/guvnor.yaml\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=mixed\nTimeoutStartSec=60\nTimeoutStopSec=30\nRestart=always\nRestartSec=10\n\n# Logging\nStandardOutput=journal\nStandardError=journal\nSyslogIdentifier=guvnor\n\n# Security hardening\nNoNewPrivileges=true\nPrivateTmp=true\nPrivateDevices=true\nProtectSystem=strict\nProtectHome=true\nProtectKernelTunables=true\nProtectKernelModules=true\nProtectControlGroups=true\nReadWritePaths=/opt/myapp\nReadWritePaths=/var/lib/guvnor\nReadWritePaths=/var/log/guvnor\n\n# Capabilities\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\n\n# Environment\nEnvironment=PATH=/usr/local/bin:/usr/bin:/bin\nEnvironment=HOME=/opt/myapp\nEnvironmentFile=-/etc/guvnor/environment\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"systemd/#environment-file","title":"Environment file","text":"<pre><code># /etc/guvnor/environment\nNODE_ENV=production\nGO_ENV=production\nRUST_ENV=production\nAPP_ENV=production\n</code></pre>"},{"location":"systemd/#log-rotation","title":"Log rotation","text":"<pre><code># /etc/logrotate.d/guvnor\n/var/log/guvnor/*.log {\n    daily\n    missingok\n    rotate 14\n    compress\n    delaycompress\n    notifempty\n    create 0640 guvnor guvnor\n    postrotate\n        systemctl reload guvnor\n    endscript\n}\n</code></pre>"},{"location":"systemd/#troubleshooting","title":"Troubleshooting","text":"<pre><code># Check service status\nsudo systemctl status guvnor\n\n# View detailed logs\nsudo journalctl -u guvnor -n 50\n\n# Check configuration\nsudo systemd-analyze verify /etc/systemd/system/guvnor.service\n\n# Test service file\nsudo systemctl daemon-reload\nsudo systemctl start guvnor\nsudo systemctl status guvnor\n</code></pre>"},{"location":"systemd/#multiple-instances","title":"Multiple instances","text":"<pre><code># For multiple guvnor instances\nsudo cp /etc/systemd/system/guvnor.service /etc/systemd/system/guvnor-app1.service\nsudo cp /etc/systemd/system/guvnor.service /etc/systemd/system/guvnor-app2.service\n\n# Edit each service file with different:\n# - WorkingDirectory\n# - User/Group  \n# - ExecStart parameters\n</code></pre>"},{"location":"workflows/","title":"Daily Workflows","text":""},{"location":"workflows/#development-workflow","title":"Development Workflow","text":"<p>Start your project: <pre><code>cd my-project\nguvnor start\nguvnor status     # Check everything is running\n</code></pre></p> <p>View logs: <pre><code>guvnor logs webapp -f    # Follow specific app\nguvnor logs -f           # Follow all apps\n</code></pre></p> <p>Restart after changes: <pre><code>guvnor restart webapp\n</code></pre></p> <p>Stop everything: <pre><code>guvnor stop\n</code></pre></p>"},{"location":"workflows/#adding-new-services","title":"Adding New Services","text":""},{"location":"workflows/#add-database-to-existing-project","title":"Add Database to Existing Project","text":"<pre><code># Edit guvnor.yaml\napps:\n  - name: web\n    # ... existing config\n\n  - name: database\n    port: 5432\n    command: postgres\n    args: [\"-D\", \"/usr/local/var/postgres\"]\n    # No hostname - internal service only\n\nguvnor validate    # Check config\nguvnor start       # Starts all apps including database\n</code></pre>"},{"location":"workflows/#add-background-worker","title":"Add Background Worker","text":"<pre><code># guvnor.yaml\napps:\n  - name: worker\n    # No hostname - background only\n    port: 8001\n    command: python\n    args: [\"worker.py\"]\n    environment:\n      WORKER_QUEUE: \"high_priority\"\n</code></pre>"},{"location":"workflows/#multiple-projects-workflow","title":"Multiple Projects Workflow","text":""},{"location":"workflows/#switching-between-projects","title":"Switching Between Projects","text":"<pre><code># Project A\ncd project-a\nguvnor start       # Runs on localhost:8080\n\n# Switch to Project B (different terminal/directory)\ncd ../project-b\nguvnor start       # ERROR: Port 8080 in use\n\n# Solution 1: Stop first project\ncd ../project-a &amp;&amp; guvnor stop\ncd ../project-b &amp;&amp; guvnor start\n\n# Solution 2: Use different ports\ncd project-b\n# Edit guvnor.yaml: server.http_port: 8090\nguvnor start       # Runs on localhost:8090\n</code></pre>"},{"location":"workflows/#running-multiple-projects-simultaneously","title":"Running Multiple Projects Simultaneously","text":"<pre><code># Configure different ports for each project\n# Project A: guvnor.yaml \u2192 http_port: 8080\n# Project B: guvnor.yaml \u2192 http_port: 8090\n# Project C: guvnor.yaml \u2192 http_port: 8100\n\n# Access:\n# http://app-a.localhost:8080\n# http://app-b.localhost:8090  \n# http://app-c.localhost:8100\n</code></pre>"},{"location":"workflows/#production-workflows","title":"Production Workflows","text":""},{"location":"workflows/#initial-deployment","title":"Initial Deployment","text":"<pre><code># On server\ngit clone your-repo\ncd your-repo\nguvnor init        # Generate config if needed\n\n# Production start\nguvnor start --domain myapp.com --email admin@myapp.com\n\n# Check status\nguvnor status\nguvnor logs\n</code></pre>"},{"location":"workflows/#updates-and-deployments","title":"Updates and Deployments","text":"<pre><code># Update code\ngit pull\n\n# Validate new config\nguvnor validate\n\n# Zero-downtime restart\nguvnor restart\n\n# Or restart specific service\nguvnor restart api-service\n</code></pre>"},{"location":"workflows/#rollback","title":"Rollback","text":"<pre><code>git checkout previous-version\nguvnor validate\nguvnor restart\n</code></pre>"},{"location":"workflows/#debugging-workflows","title":"Debugging Workflows","text":""},{"location":"workflows/#app-wont-start","title":"App Won't Start","text":"<pre><code>guvnor validate    # Check config syntax\nguvnor logs        # See error messages\nguvnor status      # Check which apps failed\n\n# Start single app for debugging\nguvnor start web-app\n</code></pre>"},{"location":"workflows/#port-conflicts","title":"Port Conflicts","text":"<pre><code># Find what's using the port\nlsof -i :8080\n\n# Or change Guvnor's port\n# Edit guvnor.yaml: server.http_port: 8090\nguvnor restart\n</code></pre>"},{"location":"workflows/#ssltls-issues","title":"SSL/TLS Issues","text":"<pre><code>guvnor logs        # Check certificate errors\n\n# Test in staging first\nguvnor start --domain staging.myapp.com --staging\n\n# Check certificate files\nls -la certs/\n</code></pre>"},{"location":"workflows/#performance-issues","title":"Performance Issues","text":"<pre><code># Check process status\nguvnor status\n\n# Monitor logs in real-time\nguvnor logs -f\n\n# Restart unhealthy services\nguvnor restart slow-service\n</code></pre>"},{"location":"workflows/#configuration-workflows","title":"Configuration Workflows","text":""},{"location":"workflows/#adding-environment-variables","title":"Adding Environment Variables","text":"<pre><code># Method 1: Edit .env file\necho \"API_KEY=secret123\" &gt;&gt; .env\nguvnor restart\n\n# Method 2: Edit guvnor.yaml\napps:\n  - name: api\n    environment:\n      API_KEY: \"secret123\"\nguvnor restart\n</code></pre>"},{"location":"workflows/#changing-ports","title":"Changing Ports","text":"<pre><code># Edit guvnor.yaml\napps:\n  - name: api\n    port: 8001        # Change from 8000 to 8001\n\nguvnor validate      # Check config\nguvnor restart       # Apply changes\n</code></pre>"},{"location":"workflows/#adding-health-checks","title":"Adding Health Checks","text":"<pre><code># guvnor.yaml\napps:\n  - name: api\n    health_check:\n      enabled: true\n      path: /health    # Your health endpoint\n      interval: 30s\n\nguvnor restart\nguvnor status        # Shows health status\n</code></pre>"},{"location":"workflows/#team-workflows","title":"Team Workflows","text":""},{"location":"workflows/#onboarding-new-developer","title":"Onboarding New Developer","text":"<pre><code># New developer setup\ngit clone team-repo\ncd team-repo\nguvnor init          # Uses existing config\nguvnor start         # Everything works\n\n# No Docker, complex setup, or environment issues!\n</code></pre>"},{"location":"workflows/#sharing-configuration","title":"Sharing Configuration","text":"<pre><code># Commit guvnor.yaml to git\ngit add guvnor.yaml\ngit commit -m \"Add Guvnor configuration\"\n\n# Don't commit .env (secrets)\necho \".env\" &gt;&gt; .gitignore\n</code></pre>"},{"location":"workflows/#environment-specific-configs","title":"Environment-Specific Configs","text":"<pre><code># Different configs for different environments\ncp guvnor.yaml guvnor.dev.yaml\ncp guvnor.yaml guvnor.prod.yaml\n\n# Use specific config\nguvnor start --config guvnor.dev.yaml\nguvnor start --config guvnor.prod.yaml\n</code></pre>"},{"location":"workflows/#migration-workflows","title":"Migration Workflows","text":""},{"location":"workflows/#from-docker-compose","title":"From Docker Compose","text":"<pre><code># Old way\ndocker-compose up -d\ndocker-compose logs -f\n\n# New way\nguvnor init          # Auto-detects services\nguvnor start         # Much faster startup\nguvnor logs\n</code></pre>"},{"location":"workflows/#from-manual-process-management","title":"From Manual Process Management","text":"<pre><code># Old way\npython api.py &amp;\nnode frontend/server.js &amp;\nredis-server &amp;\n\n# New way\nguvnor init          # Detects all processes\nguvnor start         # Manages everything\n# Automatic restarts, health checks, logging\n</code></pre>"},{"location":"workflows/#to-production-pm2systemd","title":"To Production (PM2/Systemd)","text":"<pre><code># Development\nguvnor start\n\n# Production: Install as service\nsudo cp guvnor /usr/local/bin/\n# Setup systemd service (see systemd.md)\nsudo systemctl start guvnor\n</code></pre>"},{"location":"workflows/#tips","title":"Tips","text":"<ul> <li>Always run <code>guvnor validate</code> before starting in production</li> <li>Use <code>guvnor logs -f</code> to follow logs in real-time</li> <li>Keep .env files out of version control (add to .gitignore)</li> <li>Use different ports for different projects</li> <li>Test with <code>--staging</code> before using production certificates</li> </ul>"}]}